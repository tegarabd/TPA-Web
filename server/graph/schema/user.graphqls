type User {
  id: ID!
  email: String!
  firstName: String!
  lastName: String!
  additionalName: String
  profilePhotoUrl: String
  backgroundPhotoUrl: String
  headline: String @goField(forceResolver: true)
  pronouns: String
  profileLink: String!
  about: String
  location: Location
  profileViews: Int!
  isActive: Boolean!
  experiences: [Experience!] @goField(forceResolver: true)
  educations: [Education!] @goField(forceResolver: true)
  connections: [User!] @goField(forceResolver: true)
  followers: [User!] @goField(forceResolver: true)
  following: [User!] @goField(forceResolver: true)
  posts: [Post!] @goField(forceResolver: true)
  invitations: [ConnectInvitation!] @goField(forceResolver: true)
  notifications: [Notification!] @goField(forceResolver: true)
  messages: [Message!] @goField(forceResolver: true)
  userMightKnow: [User!] @goField(forceResolver: true)
  blocked: [User!] @goField(forceResolver: true)
}

type UserMutation {
  view(input: ViewUser): User! @goField(forceResolver: true)
  follow(input: FollowUser): User! @goField(forceResolver: true)
  unFollow(input: FollowUser): User! @goField(forceResolver: true)
  block(input: BlockUser): User! @goField(forceResolver: true)
  unBlock(input: BlockUser): User! @goField(forceResolver: true)
  update(input: UpdateUser): User! @goField(forceResolver: true)
}

input UpdateUser {
  userId: ID!
  email: String
  firstName: String
  lastName: String
  additionalName: String
  profilePhotoUrl: String
  backgroundPhotoUrl: String
  headline: String
  pronouns: String
  profileLink: String
  about: String
  locationCity: String
  locationRegion: String
  isActive: Boolean
}

input ViewUser {
  viewerId: String!
  viewedUserId: String!
}

input FollowUser {
  userId: String!
  followingId: String!
}

input BlockUser {
  userId: String!
  blockedId: String!
}