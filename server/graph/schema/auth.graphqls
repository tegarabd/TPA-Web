type AuthMutation {
  google(input: GoogleAuth!): Token! @goField(forceResolver: true)
  login(input: LoginUser!): Token! @goField(forceResolver: true)
  register(input: RegisterUser!): ActivationId! @goField(forceResolver: true)
  activate(input: ActivateUser!): User! @goField(forceResolver: true)
  isEmailAlreadyTaken(email: String!): Boolean! @goField(forceResolver: true)
  isPasswordValid(password: String!): Boolean! @goField(forceResolver: true)
  verifyForgotPasswordEmail(input: ForgotPasswordEmail): ForgotPasswordId!
    @goField(forceResolver: true)
  verifyForgotPasswordCode(input: ForgotPasswordCode!): User!
    @goField(forceResolver: true)
  resetPassword(input: ResetPassword!): User! @goField(forceResolver: true)
}

input RegisterUser {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
  locationRegion: String!
  locationCity: String!
  jobTitle: String!
  employmentType: String!
  company: String!
  profilePhotoUrl: String
}

input LoginUser {
  email: String!
  password: String!
}

type Token {
  token: String!
}

type ActivationId {
  activationId: String!
}

type ForgotPasswordId {
  forgotPasswordId: String!
}

type ActivationCode {
  id: ID!
  userId: String!
  code: String!
  expiredAt: Time!
}

type ResetPasswordCode {
  id: ID!
  userId: String!
  code: String!
  expiredAt: Time!
}

input ActivateUser {
  activationId: ID!
  code: String!
}

input ForgotPasswordEmail {
  email: String!
}

input ForgotPasswordCode {
  forgotPasswordId: ID!
  code: String!
}

input ResetPassword {
  userId: String!
  password: String!
  confirmPassword: String!
}

input GoogleAuth {
  userId: String!
  email: String!
  profilePhotoUrl: String!
  firstName: String!
  lastName: String!
}