type AuthMutation {
  login(input: LoginUser!): Token! @goField(forceResolver: true)
  register(input: RegisterUser!): ActivationId! @goField(forceResolver: true)
  activate(input: ActivateUser): User! @goField(forceResolver: true)
  verifyForgotPasswordEmail(input: ForgotPasswordEmail): ForgotPasswordId!
    @goField(forceResolver: true)
  verifyForgotPasswordCode(input: ForgotPasswordCode): User!
    @goField(forceResolver: true)
  resetPassword(input: ResetPassword): User! @goField(forceResolver: true)
}

type Token {
  token: String!
}

type ActivationId {
  activationId: String!
}

type ForgotPasswordId {
  forgotPasswordId: String!
}

type ActivationCode {
  id: ID!
  userId: String!
  code: String!
  expiredAt: Time!
}

type ResetPasswordCode {
  id: ID!
  userId: String!
  code: String!
  expiredAt: Time!
}

input ActivateUser {
  activationId: ID!
  code: String!
}

input ForgotPasswordEmail {
  email: String!
}

input ForgotPasswordCode {
  forgotPasswordId: ID!
  code: String!
}

input ResetPassword {
  userId: String!
  password: String!
  confirmPassword: String!
}